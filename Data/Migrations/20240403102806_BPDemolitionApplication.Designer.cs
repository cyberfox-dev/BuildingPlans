// <auto-generated />
using System;
using BuildingPlans.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuildingPlans.Data.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240403102806_BPDemolitionApplication")]
    partial class BPDemolitionApplication
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BuildingPlans.Data.Entities.AccessGroupRoleLink", b =>
                {
                    b.Property<int>("AccessGroupRoleLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupRoleLinkID"), 1L, 1);

                    b.Property<int?>("AccessGroupID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupRoleLinkID");

                    b.ToTable("AccessGroupRoleLink");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.AccessGroups", b =>
                {
                    b.Property<int>("AccessGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupID"), 1L, 1);

                    b.Property<string>("AccessGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupID");

                    b.ToTable("AccessGroups");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.AccessGroupUserLink", b =>
                {
                    b.Property<int>("AccessGroupUserLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupUserLinkID"), 1L, 1);

                    b.Property<int?>("AccessGroupID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserProfileID")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupUserLinkID");

                    b.ToTable("AccessGroupUserLink");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Applications", b =>
                {
                    b.Property<int?>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ApplicationID"), 1L, 1);

                    b.Property<string>("AlternativeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorAccountDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentStageNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CurrentStageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EMBActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EscalationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcavationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkLicenses")
                        .HasColumnType("bit");

                    b.Property<string>("NextStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextStageNumber")
                        .HasColumnType("int");

                    b.Property<string>("NotificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PermitStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhyscialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddressOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousStageNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RIMZXNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReApplyCount")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RejectCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfApplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WBSNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WBSRequired")
                        .HasColumnType("bit");

                    b.Property<string>("WaterZXNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDrafted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isEscalated")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPlanning")
                        .HasColumnType("bit");

                    b.HasKey("ApplicationID");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.AuditTrail", b =>
                {
                    b.Property<int?>("AuditTrailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AuditTrailID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AuditTrailID");

                    b.ToTable("AuditTrail");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPAccessGroupRoleLink", b =>
                {
                    b.Property<int>("AccessGroupRoleLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupRoleLinkID"), 1L, 1);

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupRoleLinkID");

                    b.ToTable("BPAccessGroupRoleLink");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPAccessGroups", b =>
                {
                    b.Property<int>("AccessGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupID"), 1L, 1);

                    b.Property<string>("AccessGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupID");

                    b.ToTable("BPAccessGroups");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPAccessGroupsUserLink", b =>
                {
                    b.Property<int>("AccessGroupUserLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessGroupUserLinkID"), 1L, 1);

                    b.Property<int?>("AccessGroupID")
                        .HasColumnType("int");

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubdepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AccessGroupUserLinkID");

                    b.ToTable("BPAccessGroupsUserLinks");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPAddressType", b =>
                {
                    b.Property<int?>("AddresTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("AddresTypeID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("AddresTypeID");

                    b.ToTable("BPAddressTypes");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDemolitionApplication", b =>
                {
                    b.Property<int?>("DemolitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DemolitionID"), 1L, 1);

                    b.Property<string>("ApplicantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DemolitionFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainMunicipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerSurname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForDemolition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCadastralDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteERFNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPropertyOwner")
                        .HasColumnType("bit");

                    b.HasKey("DemolitionID");

                    b.ToTable("BPDemolitionApplication");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDepartmentChecklists", b =>
                {
                    b.Property<int?>("ChecklistItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ChecklistItemID"), 1L, 1);

                    b.Property<string>("ChecklistItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ChecklistItemID");

                    b.ToTable("BPDepartmentChecklists");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDepartmentLinkTable", b =>
                {
                    b.Property<int>("DepartmentLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentLinkID"), 1L, 1);

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccessGroupUserLinkID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAdmin")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentLinkID");

                    b.ToTable("BPDepartmentLinkTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDepartments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("hasSubDepartment")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentID");

                    b.ToTable("BPDepartments");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDocumentCategoryTable", b =>
                {
                    b.Property<int?>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("BPDocumentCategoryTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPDocumentUploads", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionForRepoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPlanning")
                        .HasColumnType("bit");

                    b.Property<bool?>("isRepository")
                        .HasColumnType("bit");

                    b.HasKey("DocumentID");

                    b.ToTable("BPDocumentUploads");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPFinancial", b =>
                {
                    b.Property<int>("FinancialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("FinancialID");

                    b.ToTable("BPFinancial");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPFunctionalAreas", b =>
                {
                    b.Property<int?>("FunctionalAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("FunctionalAreaID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FAItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("FunctionalAreaID");

                    b.ToTable("BPFunctionalAreas");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPMandatoryDepartmentDocuments", b =>
                {
                    b.Property<int?>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DocumentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DocumentID");

                    b.ToTable("BPMandatoryDepartmentDocuments");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPMandatoryDocumentUploads", b =>
                {
                    b.Property<int?>("MandatoryDocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MandatoryDocumentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MandatoryDocumentCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MandatoryDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("MandatoryDocumentID");

                    b.ToTable("BPMandatoryDocumentUploads");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPMandatoryStageDocuments", b =>
                {
                    b.Property<int?>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DocumentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DocumentID");

                    b.ToTable("BPMandatoryStageDocuments");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPNotifications", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isRead")
                        .HasColumnType("bit");

                    b.HasKey("NotificationID");

                    b.ToTable("BPNotifications");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BPStagesCheckLists", b =>
                {
                    b.Property<int?>("CheckListItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("CheckListItemID"), 1L, 1);

                    b.Property<string>("ChecklistItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("CheckListItemID");

                    b.ToTable("bpStagesCheckLists");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.BuildingApplication", b =>
                {
                    b.Property<int>("ApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationID"), 1L, 1);

                    b.Property<string>("AddressType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltCellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AltEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchitectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchitectUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuildingPlanFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErfNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LSNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfUnits")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationClassification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PremisesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SGCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageNumber")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfDevelopment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ApplicationID");

                    b.ToTable("BuildingApplications");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.CommentBuilder", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"), 1L, 1);

                    b.Property<string>("CommentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("CommentID");

                    b.ToTable("CommentBuilder");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Comments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CanReplyUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubDepartmentForCommentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("isApplicantReplay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("isClarifyCommentID")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Config", b =>
                {
                    b.Property<int>("ConfigID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfigID"), 1L, 1);

                    b.Property<string>("ConfigDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfigName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilitySlot1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilitySlot2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilitySlot3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ConfigID");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ContactDetails", b =>
                {
                    b.Property<int>("ContactDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactDetailID"), 1L, 1);

                    b.Property<string>("CellNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ContactDetailID");

                    b.ToTable("ContactDetails");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Departments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("hasSubDepartment")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("needsZXNumber")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentID");

                    b.ToTable("DepartmentsTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.DepositRequired", b =>
                {
                    b.Property<int>("DepositRequiredID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepositRequiredID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceItemCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartmentForCommentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<string>("WBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DepositRequiredID");

                    b.ToTable("DepositRequired");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.DocumentsRepository", b =>
                {
                    b.Property<int?>("DocumentsRepositoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DocumentsRepositoryID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DocumentsCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DocumentsRepositoryID");

                    b.ToTable("DocumentsRepository");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.DocumentUpload", b =>
                {
                    b.Property<int>("DocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionForRepoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPlanning")
                        .HasColumnType("bit");

                    b.Property<bool?>("isRepository")
                        .HasColumnType("bit");

                    b.HasKey("DocumentID");

                    b.ToTable("DocumentUpload");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.DraftedProjects", b =>
                {
                    b.Property<int?>("DraftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DraftID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Engineer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcavationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhyscialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddressOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RejectCount")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfApplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WBSNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("DraftID");

                    b.ToTable("DraftedProjectsTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.FAQ", b =>
                {
                    b.Property<int>("FAQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQID"), 1L, 1);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("FAQID");

                    b.ToTable("FAQ");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Financial", b =>
                {
                    b.Property<int>("FinancialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("FinancialID");

                    b.ToTable("Financial");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.GLCode", b =>
                {
                    b.Property<int>("GLCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GLCodeID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfitCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("GLCodeID");

                    b.ToTable("GLCode");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.MandatoryDocumentStageLink", b =>
                {
                    b.Property<int?>("MandatoryDocumentStageLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MandatoryDocumentStageLinkID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MandatoryDocumentID")
                        .HasColumnType("int");

                    b.Property<int>("StageID")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("MandatoryDocumentStageLinkID");

                    b.ToTable("MandatoryDocumentStageLink");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.MandatoryDocumentUpload", b =>
                {
                    b.Property<int?>("MandatoryDocumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MandatoryDocumentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MandatoryDocumentCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MandatoryDocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("MandatoryDocumentID");

                    b.ToTable("MandatoryDocumentUploads");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ManuallyAssignUsers", b =>
                {
                    b.Property<int?>("ReferalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ReferalID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedToUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ReferalID");

                    b.ToTable("ManuallyAssignUsers");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.MFT", b =>
                {
                    b.Property<int>("MFTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MFTID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MFTNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("MFTID");

                    b.ToTable("MFT");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Notification", b =>
                {
                    b.Property<int?>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("NotificationID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("NotificationID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.OccupationClassificationTable", b =>
                {
                    b.Property<int?>("OccupationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("OccupationID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupancy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupancyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("OccupationID");

                    b.ToTable("OccupationClassificationTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.PermitSubForComment", b =>
                {
                    b.Property<int?>("PermitSubForCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PermitSubForCommentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MoveToPaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PermitComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermitCommentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermitDocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequestForDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAssaignedToComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("hasSuperVisionFee")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPaid")
                        .HasColumnType("bit");

                    b.HasKey("PermitSubForCommentID");

                    b.ToTable("PermitSubForComment");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Professionals", b =>
                {
                    b.Property<int>("ProfessinalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessinalID"), 1L, 1);

                    b.Property<string>("AppUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BP_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BpVerified")
                        .HasColumnType("bit");

                    b.Property<string>("CIBRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessinalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ProfessinalID");

                    b.HasIndex("AppUserID");

                    b.ToTable("ProfessionalsTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ProfessionalsLinks", b =>
                {
                    b.Property<int?>("ProfessionalsLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ProfessionalsLinkID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProfessionalID")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ProfessionalsLinkID");

                    b.ToTable("ProfessionalsLink");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ProjectSizeCheckList", b =>
                {
                    b.Property<int?>("ProjectSizeCheckListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ProjectSizeCheckListID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MandatoryDocumentCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSizeCheckListActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSizeCheckListActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectSizeCheckListRowNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ProjectSizeCheckListID");

                    b.ToTable("ProjectSizeCheckList");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ProjectSizedSelections", b =>
                {
                    b.Property<int?>("SelectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SelectionID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("SelectionID");

                    b.ToTable("ProjectSizedSelections");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ReviewerAssignment", b =>
                {
                    b.Property<int?>("ReviewerForCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ReviewerForCommentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReviewerAssignedToComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ReviewerForCommentID");

                    b.ToTable("ReviewerForComment");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ServiceItems", b =>
                {
                    b.Property<int?>("ServiceItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ServiceItemID"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalVat")
                        .HasColumnType("float");

                    b.Property<bool?>("VatApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ServiceItemID");

                    b.ToTable("ServiceItem");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Stages", b =>
                {
                    b.Property<int?>("StageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("StageID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageOrderNumber")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("StageID");

                    b.ToTable("StageTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.StagesTableBP", b =>
                {
                    b.Property<int>("StageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FunctionalArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SkipTrigger")
                        .HasColumnType("bit");

                    b.Property<string>("StageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StageOrder")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("StageID");

                    b.ToTable("StagesTableBP");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.SubDepartmentForComment", b =>
                {
                    b.Property<int?>("SubDepartmentForCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SubDepartmentForCommentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CommentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("FinalApproval")
                        .HasColumnType("bit");

                    b.Property<string>("GISReviewerUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsRefered")
                        .HasColumnType("bit");

                    b.Property<string>("ReferedToUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAssaignedToComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAwaitingClarity")
                        .HasColumnType("bit");

                    b.Property<bool?>("isGISReviewing")
                        .HasColumnType("bit");

                    b.HasKey("SubDepartmentForCommentID");

                    b.ToTable("SubDepartmentForComment");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.SubDepartments", b =>
                {
                    b.Property<int?>("SubDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("SubDepartmentID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("GLCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MapLayerID")
                        .HasColumnType("int");

                    b.Property<int?>("PermitExpiration")
                        .HasColumnType("int");

                    b.Property<string>("ProfitCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDepartmentAdminUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WayleaveExpiration")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isSetForAutomaticDistribution")
                        .HasColumnType("bit");

                    b.Property<bool?>("needsZXNumber")
                        .HasColumnType("bit");

                    b.HasKey("SubDepartmentID");

                    b.ToTable("SubDepartmentsTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.TypeOfExcavation", b =>
                {
                    b.Property<int>("TypeOfExcavationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeOfExcavationID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOfExcavationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfExcavationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("TypeOfExcavationID");

                    b.ToTable("TypesOfExcavation");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.UserLinkToArchitect", b =>
                {
                    b.Property<int>("UserLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLinkID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchitectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchitectUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLientFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UserLinkID");

                    b.ToTable("UserLinkToArchitects");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.UserProfile", b =>
                {
                    b.Property<int?>("UserProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("UserProfileID"), 1L, 1);

                    b.Property<string>("AlternativeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlternativePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BP_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CopyOfID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Directorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ICASALicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhyscialAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("depConfirmation")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isArchitect")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDepartmentAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("isInternal")
                        .HasColumnType("bit");

                    b.Property<bool?>("isZoneAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("refNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("zoneID")
                        .HasColumnType("int");

                    b.Property<string>("zoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserProfileID");

                    b.ToTable("UserProfilesTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ZoneForComment", b =>
                {
                    b.Property<int?>("ZoneForCommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ZoneForCommentID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ZoneForCommentID");

                    b.ToTable("ZoneForComment");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ZoneLink", b =>
                {
                    b.Property<int?>("ZoneLinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ZoneLinkID"), 1L, 1);

                    b.Property<string>("AccessGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccessGroupUserLinkID")
                        .HasColumnType("int");

                    b.Property<string>("AssignedUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("SubDepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDefault")
                        .HasColumnType("bit");

                    b.Property<bool?>("isDepartmentAdmin")
                        .HasColumnType("bit");

                    b.Property<bool?>("isZoneAdmin")
                        .HasColumnType("bit");

                    b.HasKey("ZoneLinkID");

                    b.ToTable("ZoneLinkTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Zones", b =>
                {
                    b.Property<int?>("ZoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("ZoneID"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int>("MapObjectID")
                        .HasColumnType("int");

                    b.Property<int>("SubDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ZoneID");

                    b.ToTable("ZonesTable");
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.ZXNumberLog", b =>
                {
                    b.Property<int>("ZXNumberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZXNumberID"), 1L, 1);

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZXNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("ZXNumberID");

                    b.ToTable("ZXNumberLog");
                });

            modelBuilder.Entity("BuildingPlans.DTO.LinkedUserSpDTO", b =>
                {
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneLinkID")
                        .HasColumnType("int");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("LinkedUserSpDTOs");
                });

            modelBuilder.Entity("BuildingPlans.DTO.UserSpDTO", b =>
                {
                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserSpDTOs");
                });

            modelBuilder.Entity("BuildingPlans.Models.DTO.ApplicationsDTO", b =>
                {
                    b.Property<string>("AlternativeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ApplicationID")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorAccountDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CurrentStageNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CurrentStageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EMBActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EscalationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcavationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NatureOfWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NetworkLicenses")
                        .HasColumnType("bit");

                    b.Property<string>("NextStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NextStageNumber")
                        .HasColumnType("int");

                    b.Property<string>("NotificationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalAddressOfProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousStageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreviousStageNumber")
                        .HasColumnType("int");

                    b.Property<string>("ProjectNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RIMZXNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReApplyCount")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RejectCount")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfApplication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WBSNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("WBSRequired")
                        .HasColumnType("bit");

                    b.Property<string>("WaterZXNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZoneID")
                        .HasColumnType("int");

                    b.Property<int?>("escalateDate")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isDrafted")
                        .HasColumnType("bit");

                    b.Property<bool?>("isEscalated")
                        .HasColumnType("bit");

                    b.Property<bool?>("isPlanning")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("permitStartDate")
                        .HasColumnType("datetime2");

                    b.ToTable("ApplicationListDTO");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.Professionals", b =>
                {
                    b.HasOne("BuildingPlans.Data.Entities.AppUser", "AppUser")
                        .WithMany("Professionals")
                        .HasForeignKey("AppUserID");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BuildingPlans.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BuildingPlans.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuildingPlans.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BuildingPlans.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuildingPlans.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Professionals");
                });
#pragma warning restore 612, 618
        }
    }
}
